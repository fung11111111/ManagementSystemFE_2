{"ast":null,"code":"import _asyncToGenerator from\"/Users/funglam/Desktop/HRManagementSystem/ManagementSystemFE_2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/funglam/Desktop/HRManagementSystem/ManagementSystemFE_2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/funglam/Desktop/HRManagementSystem/ManagementSystemFE_2/node_modules/@babel/runtime/regenerator/index.js\";import{Modal,Button}from\"antd\";import{useContext,useState,useEffect,useRef}from\"react\";import{AppContext}from\"../employeeTable\";import InputForm from\"../inputForm\";import{InitContext}from\"../../Layout/appLayout\";import{getLabelMap,isFormValid,formFieldList,getEmployeeFromForm}from\"../../common\";import{updateEmployee}from\"../../api/employee\";import{dateFormat}from\"../../common/dateHelper\";import\"./index.css\";import{jsx as _jsx}from\"react/jsx-runtime\";var EditFormModal=function EditFormModal(){var _useContext=useContext(AppContext),initForm=_useContext.initForm,editForm=_useContext.editForm,iniEmployees=_useContext.iniEmployees;var _editForm=_slicedToArray(editForm,2),formVisible=_editForm[0],setFormVisible=_editForm[1];var _initForm=_slicedToArray(initForm,2),initFormVal=_initForm[0],setInitFormVal=_initForm[1];var _useContext2=useContext(InitContext),fieldLabel=_useContext2.fieldLabel;var _useState=useState(new Map()),_useState2=_slicedToArray(_useState,2),labelMap=_useState2[0],setLabelMap=_useState2[1];var formRef=useRef();useEffect(function(){if(formRef&&formRef.current){formRef.current.resetFields();}},[initFormVal]);useEffect(function(){if(fieldLabel){var _labelMap=getLabelMap(fieldLabel,\"ALERTMODAL\");setLabelMap(_labelMap);}},[fieldLabel]);var handleOk=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var valid,emp;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:formRef.current.submit();_context.next=3;return isFormValid(formRef,formFieldList);case 3:valid=_context.sent;console.log(valid);if(valid){emp=getEmployeeFromForm(formRef);updateEmployee(initFormVal.id,emp).then(function(rsp){if(rsp.data){iniEmployees();}}).catch(function(err){console.log(err);});setFormVisible(false);}case 6:case\"end\":return _context.stop();}}},_callee);}));return function handleOk(){return _ref.apply(this,arguments);};}();var handleCancel=function handleCancel(){setFormVisible(false);};return/*#__PURE__*/_jsx(Modal,{width:1000,className:\"modal-content\",title:labelMap&&labelMap.get(\"A5\")?labelMap.get(\"A5\"):\"EDIT\",visible:formVisible,onCancel:handleCancel,footer:[/*#__PURE__*/_jsx(Button,{onClick:handleCancel,className:\"modalNoButton\",children:labelMap&&labelMap.get(\"A3\")?labelMap.get(\"A3\"):\"No\"},\"cancel\"),/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:handleOk,className:\"modalOkButton\",children:labelMap&&labelMap.get(\"A2\")?labelMap.get(\"A2\"):\"Yes\"},\"ok\")],children:/*#__PURE__*/_jsx(InputForm,{initFormVal:initFormVal,formRef:formRef})});};export default EditFormModal;","map":{"version":3,"sources":["/Users/funglam/Desktop/HRManagementSystem/ManagementSystemFE_2/src/components/modal/editFormModal.jsx"],"names":["Modal","Button","useContext","useState","useEffect","useRef","AppContext","InputForm","InitContext","getLabelMap","isFormValid","formFieldList","getEmployeeFromForm","updateEmployee","dateFormat","EditFormModal","initForm","editForm","iniEmployees","formVisible","setFormVisible","initFormVal","setInitFormVal","fieldLabel","Map","labelMap","setLabelMap","formRef","current","resetFields","handleOk","submit","valid","console","log","emp","id","then","rsp","data","catch","err","handleCancel","get"],"mappings":"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","sourcesContent":["import { Modal, Button } from \"antd\";\nimport { useContext, useState, useEffect, useRef } from \"react\";\nimport { AppContext } from \"../employeeTable\";\nimport InputForm from \"../inputForm\";\nimport { InitContext } from \"../../Layout/appLayout\";\nimport {\n  getLabelMap,\n  isFormValid,\n  formFieldList,\n  getEmployeeFromForm,\n} from \"../../common\";\nimport { updateEmployee } from \"../../api/employee\";\nimport { dateFormat } from \"../../common/dateHelper\";\nimport \"./index.css\";\nconst EditFormModal = () => {\n  const { initForm, editForm, iniEmployees } = useContext(AppContext);\n  const [formVisible, setFormVisible] = editForm;\n  const [initFormVal, setInitFormVal] = initForm;\n  const { fieldLabel } = useContext(InitContext);\n  const [labelMap, setLabelMap] = useState(new Map());\n  const formRef = useRef();\n\n  useEffect(() => {\n    if (formRef && formRef.current) {\n      formRef.current.resetFields();\n    }\n  }, [initFormVal]);\n\n  useEffect(() => {\n    if (fieldLabel) {\n      let labelMap = getLabelMap(fieldLabel, \"ALERTMODAL\");\n      setLabelMap(labelMap);\n    }\n  }, [fieldLabel]);\n\n  const handleOk = async () => {\n    formRef.current.submit();\n\n    let valid = await isFormValid(formRef, formFieldList);\n    console.log(valid);\n    if (valid) {\n      let emp = getEmployeeFromForm(formRef);\n\n      updateEmployee(initFormVal.id, emp)\n        .then((rsp) => {\n          if (rsp.data) {\n            iniEmployees();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setFormVisible(false);\n    }\n  };\n\n  const handleCancel = () => {\n    setFormVisible(false);\n  };\n\n  return (\n    <Modal\n      width={1000}\n      className=\"modal-content\"\n      title={labelMap && labelMap.get(\"A5\") ? labelMap.get(\"A5\") : \"EDIT\"}\n      visible={formVisible}\n      onCancel={handleCancel}\n      footer={[\n        <Button key=\"cancel\" onClick={handleCancel} className=\"modalNoButton\">\n          {labelMap && labelMap.get(\"A3\") ? labelMap.get(\"A3\") : \"No\"}\n        </Button>,\n        <Button\n          key=\"ok\"\n          type=\"primary\"\n          onClick={handleOk}\n          className=\"modalOkButton\"\n        >\n          {labelMap && labelMap.get(\"A2\") ? labelMap.get(\"A2\") : \"Yes\"}\n        </Button>,\n      ]}\n    >\n      <InputForm initFormVal={initFormVal} formRef={formRef} />\n    </Modal>\n  );\n};\n\nexport default EditFormModal;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import{dateFormat}from\"./dateHelper\";var getLabelMap=function getLabelMap(lang,type){var labelMap=new Map();if(lang){lang.map(function(field){if(field.type===type){labelMap.set(field.field_code,field.label);}});}return labelMap;};var getEmployeeFromForm=function getEmployeeFromForm(formRef){var emp={name:formRef.current.getFieldValue(\"name\"),contact:formRef.current.getFieldValue(\"contact\"),building:formRef.current.getFieldValue(\"building\"),employmentDate:formRef.current.getFieldValue(\"contactPeriod\")[0].format(dateFormat),expiryDate:formRef.current.getFieldValue(\"contactPeriod\")[1].format(dateFormat)};return emp;};var isFormValid=function isFormValid(formRef,fieldList){return formRef.current.validateFields(fieldList).then(function(val){console.log(\"no error\");return true;}).catch(function(err){console.log(err);return false;});};//employee status\nvar STATUS_NORMAL=\"normal\";var STATUS_EXPIRED=\"expired\";var STATUS_WITHIN_A_MONTH=\"almost\";var STATUS_WITHIN_3_MONTH=\"soon\";//select options\nvar SELECT_ALL=\"ALL\";var SELCT_WITHIN_A_MONTH=\"M1\";var SELECT_WITHIN_3_MONTHS=\"M3\";var formFieldList=[\"name\",\"contact\",\"building\",\"contactPeriod\"];export{getLabelMap,isFormValid,getEmployeeFromForm,formFieldList,STATUS_NORMAL,STATUS_EXPIRED,STATUS_WITHIN_A_MONTH,STATUS_WITHIN_3_MONTH,SELECT_ALL,SELCT_WITHIN_A_MONTH,SELECT_WITHIN_3_MONTHS};","map":{"version":3,"sources":["/Users/funglam/Desktop/HRManagementSystem/ManagementSystemFE_2/src/common/index.js"],"names":["dateFormat","getLabelMap","lang","type","labelMap","Map","map","field","set","field_code","label","getEmployeeFromForm","formRef","emp","name","current","getFieldValue","contact","building","employmentDate","format","expiryDate","isFormValid","fieldList","validateFields","then","val","console","log","catch","err","STATUS_NORMAL","STATUS_EXPIRED","STATUS_WITHIN_A_MONTH","STATUS_WITHIN_3_MONTH","SELECT_ALL","SELCT_WITHIN_A_MONTH","SELECT_WITHIN_3_MONTHS","formFieldList"],"mappings":"AAAA,OAASA,UAAT,KAA2B,cAA3B,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,CAAOC,IAAP,CAAgB,CAClC,GAAIC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,GAAJ,EAAf,CACA,GAAIH,IAAJ,CAAU,CACRA,IAAI,CAACI,GAAL,CAAS,SAACC,KAAD,CAAW,CAClB,GAAIA,KAAK,CAACJ,IAAN,GAAeA,IAAnB,CAAyB,CACvBC,QAAQ,CAACI,GAAT,CAAaD,KAAK,CAACE,UAAnB,CAA+BF,KAAK,CAACG,KAArC,EACD,CACF,CAJD,EAKD,CACD,MAAON,CAAAA,QAAP,CACD,CAVD,CAYA,GAAMO,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,OAAD,CAAa,CACvC,GAAIC,CAAAA,GAAG,CAAG,CACRC,IAAI,CAAEF,OAAO,CAACG,OAAR,CAAgBC,aAAhB,CAA8B,MAA9B,CADE,CAERC,OAAO,CAAEL,OAAO,CAACG,OAAR,CAAgBC,aAAhB,CAA8B,SAA9B,CAFD,CAGRE,QAAQ,CAAEN,OAAO,CAACG,OAAR,CAAgBC,aAAhB,CAA8B,UAA9B,CAHF,CAIRG,cAAc,CAAEP,OAAO,CAACG,OAAR,CACbC,aADa,CACC,eADD,EACkB,CADlB,EAEbI,MAFa,CAENpB,UAFM,CAJR,CAORqB,UAAU,CAAET,OAAO,CAACG,OAAR,CACTC,aADS,CACK,eADL,EACsB,CADtB,EAETI,MAFS,CAEFpB,UAFE,CAPJ,CAAV,CAWA,MAAOa,CAAAA,GAAP,CACD,CAbD,CAeA,GAAMS,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACV,OAAD,CAAUW,SAAV,CAAwB,CAC1C,MAAOX,CAAAA,OAAO,CAACG,OAAR,CACJS,cADI,CACWD,SADX,EAEJE,IAFI,CAEC,SAACC,GAAD,CAAS,CACbC,OAAO,CAACC,GAAR,CAAY,UAAZ,EACA,MAAO,KAAP,CACD,CALI,EAMJC,KANI,CAME,SAACC,GAAD,CAAS,CACdH,OAAO,CAACC,GAAR,CAAYE,GAAZ,EACA,MAAO,MAAP,CACD,CATI,CAAP,CAUD,CAXD,CAaA;AACA,GAAMC,CAAAA,aAAa,CAAG,QAAtB,CACA,GAAMC,CAAAA,cAAc,CAAG,SAAvB,CACA,GAAMC,CAAAA,qBAAqB,CAAG,QAA9B,CACA,GAAMC,CAAAA,qBAAqB,CAAG,MAA9B,CAEA;AACA,GAAMC,CAAAA,UAAU,CAAG,KAAnB,CACA,GAAMC,CAAAA,oBAAoB,CAAG,IAA7B,CACA,GAAMC,CAAAA,sBAAsB,CAAG,IAA/B,CAEA,GAAMC,CAAAA,aAAa,CAAG,CAAC,MAAD,CAAS,SAAT,CAAoB,UAApB,CAAgC,eAAhC,CAAtB,CAEA,OACErC,WADF,CAEEqB,WAFF,CAGEX,mBAHF,CAIE2B,aAJF,CAKEP,aALF,CAMEC,cANF,CAOEC,qBAPF,CAQEC,qBARF,CASEC,UATF,CAUEC,oBAVF,CAWEC,sBAXF","sourcesContent":["import { dateFormat } from \"./dateHelper\";\n\nconst getLabelMap = (lang, type) => {\n  let labelMap = new Map();\n  if (lang) {\n    lang.map((field) => {\n      if (field.type === type) {\n        labelMap.set(field.field_code, field.label);\n      }\n    });\n  }\n  return labelMap;\n};\n\nconst getEmployeeFromForm = (formRef) => {\n  let emp = {\n    name: formRef.current.getFieldValue(\"name\"),\n    contact: formRef.current.getFieldValue(\"contact\"),\n    building: formRef.current.getFieldValue(\"building\"),\n    employmentDate: formRef.current\n      .getFieldValue(\"contactPeriod\")[0]\n      .format(dateFormat),\n    expiryDate: formRef.current\n      .getFieldValue(\"contactPeriod\")[1]\n      .format(dateFormat),\n  };\n  return emp;\n};\n\nconst isFormValid = (formRef, fieldList) => {\n  return formRef.current\n    .validateFields(fieldList)\n    .then((val) => {\n      console.log(\"no error\");\n      return true;\n    })\n    .catch((err) => {\n      console.log(err);\n      return false;\n    });\n};\n\n//employee status\nconst STATUS_NORMAL = \"normal\";\nconst STATUS_EXPIRED = \"expired\";\nconst STATUS_WITHIN_A_MONTH = \"almost\";\nconst STATUS_WITHIN_3_MONTH = \"soon\";\n\n//select options\nconst SELECT_ALL = \"ALL\";\nconst SELCT_WITHIN_A_MONTH = \"M1\";\nconst SELECT_WITHIN_3_MONTHS = \"M3\";\n\nconst formFieldList = [\"name\", \"contact\", \"building\", \"contactPeriod\"];\n\nexport {\n  getLabelMap,\n  isFormValid,\n  getEmployeeFromForm,\n  formFieldList,\n  STATUS_NORMAL,\n  STATUS_EXPIRED,\n  STATUS_WITHIN_A_MONTH,\n  STATUS_WITHIN_3_MONTH,\n  SELECT_ALL,\n  SELCT_WITHIN_A_MONTH,\n  SELECT_WITHIN_3_MONTHS,\n};\n"]},"metadata":{},"sourceType":"module"}